---
layout: post
title: "Store and read static files in Android"
date: 2012-10-21T00:45:00+05:30
tags:
 - Android
---

<div class='post'>
<div dir="ltr" style="text-align: left;" trbidi="on">Recently I was writing an Android application, in which I had to read data from a static text file. I did not know where to keep the file and how to refer that file in the program (in windows/*nix OS we used to provide path to the file in&nbsp;file system). After surfing the internet enough, found a solution to this problem.<br /><br />Note: This post helps you to read from a static application specific internal files.<br /><br />1) The IDE which I used to develop Android applications is Eclipse and I assume that you already have an Android project opened and the static file to be read.<br /><br />2) The name of the static file which I am going to use in this example is dictionary.txt<br /><br />3) In the directory structure of an Android project, there will be a directory called "res". Create a directory called "raw" inside the "res" directory and import the file to be read in that directory. All the files added to the raw folder will be read-only. (And I&nbsp;don't&nbsp;think we can refer them as files anymore. So that data can be read as shown in step 6). The directory structure might look like this<br /><div class="separator" style="clear: both; text-align: center;"><a href="http://4.bp.blogspot.com/-AY2IMv2dumM/UILv-BzXbtI/AAAAAAAABSc/iubW7BFWrvo/s1600/AndroidProjectStructure.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-AY2IMv2dumM/UILv-BzXbtI/AAAAAAAABSc/iubW7BFWrvo/s1600/AndroidProjectStructure.png" /></a></div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;">4) After adding the file, just Build the Project and make sure that build is successful.</div><div class="separator" style="clear: both; text-align: left;"><br /></div><div class="separator" style="clear: both; text-align: left;">5) Now, in the "gen" directory, inside your package, Open the R.java file. You might get to see something similar to this</div><div class="separator" style="clear: both; text-align: left;"></div><div class="separator" style="clear: both;"><br /></div><div class="separator" style="clear: both;"><span style="font-family: Courier New, Courier, monospace;">&nbsp; &nbsp; public static final class raw {</span></div><div class="separator" style="clear: both;"><span style="font-family: Courier New, Courier, monospace;">&nbsp; &nbsp; &nbsp; &nbsp; public static final int dictionary=0x......;</span></div><div class="separator" style="clear: both;"><span style="font-family: Courier New, Courier, monospace;">&nbsp; &nbsp; }</span></div><br /><br />6) Now, this static file will be included in the ".apk" file. As to read from the file, the following piece of code would do that job. You may have to add the appropriate try-catch blocks.<br /><br /><span style="font-family: Courier New, Courier, monospace;">BufferedReader filereader =&nbsp;new BufferedReader(</span><br /><span style="font-family: 'Courier New', Courier, monospace;">&nbsp; &nbsp;</span><span style="font-family: Courier New, Courier, monospace;">new InputStreamReader (ctx.getResources().openRawResource&nbsp;</span><br /><span style="font-family: 'Courier New', Courier, monospace;">&nbsp; &nbsp;</span><span style="font-family: Courier New, Courier, monospace;">(R.raw.dictionary)));</span><br /><span style="font-family: Courier New, Courier, monospace;"></span><br /><span style="font-family: Courier New, Courier, monospace;">String lineread = "";</span><br /><span style="font-family: Courier New, Courier, monospace;">while ((lineread = filereader.readLine()) != null)</span><br /><span style="font-family: Courier New, Courier, monospace;">{</span><br /><span style="font-family: Courier New, Courier, monospace;">&nbsp; &nbsp;System.err.println ("Read " + lineread);</span><br /><span style="font-family: Courier New, Courier, monospace;">}</span><br /><div><span style="font-family: 'Courier New', Courier, monospace;">filereader.close();</span></div><div><span style="font-family: 'Courier New', Courier, monospace;"><br /></span></div><div style="text-align: left;"><span style="font-family: inherit;">7) In order to view the files in development environment or emulator itself, there is a perspective called DDMS in Eclipse, just switch to that and have your Android Virtual Device started.</span></div><div style="text-align: left;"><span style="font-family: inherit;"><br /></span></div><div class="separator" style="clear: both; text-align: center;"><a href="http://2.bp.blogspot.com/-G7nW7H78T1U/UIL16OQaSMI/AAAAAAAABSs/9LpSasvcXR4/s1600/DDMS.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" height="371" src="http://2.bp.blogspot.com/-G7nW7H78T1U/UIL16OQaSMI/AAAAAAAABSs/9LpSasvcXR4/s640/DDMS.png" width="640" /></a></div><div style="text-align: left;"><span style="font-family: inherit;"><br /></span></div><div style="text-align: left;"><span style="font-family: inherit;">8) The application specific files can be found in data/data/&lt;your package name&gt;/files</span></div></div></div>
